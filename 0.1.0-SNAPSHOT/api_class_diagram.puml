@startuml
title
    Terminal Calypso Certificate API 0.1.+ (2024-02-13)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60

' -- Styles that don't work with new version of plantuml --
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' -- END --

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

' Yellow
skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:pink>**Keypop Calypso Card API**</back>
    ** <back:yellow>java.security</back>
end legend

package "calypso.certificate" as api {
    +class "**final** CalypsoCertificateApiProperties" as ApiProperties <<green>> {
        +{static} **final** String VERSION
    }
    +interface CalypsoCertificateApiFactory <<blue>> {
        +CalypsoCaCertificateV1Builder createCalypsoCaCertificateV1Builder ()
        +CalypsoCardCertificateV1Builder  createCalypsoCardCertificateV1Builder ()
    }
    package "ca" as ca {
        +interface CalypsoCaCertificateV1Builder <<blue>> {
            +CalypsoCaCertificateV1Builder useExternalSigner (CalypsoCaCertificateSignerSpi caCertificateSigner)
            +CalypsoCaCertificateV1Builder useInternalSigner (<back:yellow>PrivateKey</back> issuerPrivateKey, byte[] issuerPublicKeyReference)

            +CalypsoCaCertificateV1Builder setCaPublicKey (<back:yellow>PublicKey</back> caPublicKey, byte[] caPublicKeyReference)
            +CalypsoCaCertificateV1Builder setStartDate (int year, int month, int day)
            +CalypsoCaCertificateV1Builder setEndDate (int year, int month, int day)
            +CalypsoCaCertificateV1Builder setAid (byte[] aid)
            +CalypsoCaCertificateV1Builder setCaRights (byte caRights) ???
            +CalypsoCaCertificateV1Builder setCaScope (byte caScope) ???
            +CalypsoCaCertificateV1Builder setCaOperatingMode (byte caOperatingMode) ???

            +CalypsoCaCertificateV1 build ()
        }
        +interface "<<<back:pink>CaCertificate</back>>>\nCalypsoCaCertificateV1" as CalypsoCaCertificateV1 {
            +byte[] getRawData ()
        }
        package "spi" as caSpi {
            +interface CalypsoCaCertificateSignerSpi <<red>> {
                +byte[] getIssuerPublicKeyReference ()
                +byte[] generateSignedCertificate (byte[] allData) ???
                +byte[] generateSignedCertificate (byte[] data, byte[] recoverableData) ???
            }
        }
    }
    package "card" as card {
        +interface CalypsoCardCertificateV1Builder <<blue>> {
            +CalypsoCardCertificateV1Builder useExternalSigner (CalypsoCardCertificateSignerSpi cardCertificateSigner)
            +CalypsoCardCertificateV1Builder useInternalSigner (<back:yellow>PrivateKey</back> issuerPrivateKey, byte[] issuerPublicKeyReference)

            +CalypsoCardCertificateV1Builder setCardPublicKey (byte[] cardPublicKey)
            +CalypsoCardCertificateV1Builder setStartDate (int year, int month, int day)
            +CalypsoCardCertificateV1Builder setEndDate (int year, int month, int day)
            +CalypsoCardCertificateV1Builder setAid (byte[] aid)
            +CalypsoCardCertificateV1Builder setCardSerialNumber (byte[] serialNumber)
            +CalypsoCardCertificateV1Builder setCardStartupInfo (byte[] startupInfo)
            +CalypsoCardCertificateV1Builder setIndex (int index)

            +CalypsoCardCertificateV1 build ()
        }
        +interface "<<<back:pink>CardCertificate</back>>>\nCalypsoCardCertificateV1" as CalypsoCardCertificateV1 {
            +byte[] getRawData ()
        }
        package "spi" as cardSpi {
            +interface CalypsoCardCertificateSignerSpi <<red>> {
                +byte[] getIssuerPublicKeyReference ()
                +byte[] generateSignedCertificate (byte[] allData) ???
                +byte[] generateSignedCertificate (byte[] data, byte[] recoverableData) ???
            }
        }
    }
}

' Associations

CalypsoCertificateApiFactory ..> CalypsoCaCertificateV1Builder #C_LINK : provide >
CalypsoCertificateApiFactory ..> CalypsoCardCertificateV1Builder #C_LINK : provide >

CalypsoCaCertificateV1Builder ..> CalypsoCaCertificateSignerSpi #C_USE : use >
CalypsoCaCertificateV1Builder ..> CalypsoCaCertificateV1 #C_LINK : provide >

CalypsoCardCertificateV1Builder ..> CalypsoCardCertificateSignerSpi #C_USE : use >
CalypsoCardCertificateV1Builder ..> CalypsoCardCertificateV1 #C_LINK : provide >

' == LAYOUT ==

'CalypsoCertificateApiFactory -[hidden]- CalypsoCaCertificateV1Builder
'CalypsoCertificateApiFactory -[hidden]- CalypsoCardCertificateV1Builder

' == STYLE ==

package api #C_GREY1 {}
package api.ca #C_GREY2 {}
package api.ca.caSpi #C_GREY3 {}
package api.card #C_GREY2 {}
package api.card.cardSpi #C_GREY3 {}

@enduml