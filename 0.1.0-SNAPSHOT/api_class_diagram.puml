@startuml
title
    Terminal Calypso Certificate API 0.1.+ (2024-02-20)
end title

' == THEME ==

'Couleurs issues de : https://htmlcolorcodes.com/fr/tableau-de-couleur/tableau-de-couleur-design-plat/
!define C_GREY1 F8F9F9
!define C_GREY2 F2F3F4
!define C_GREY3 E5E7E9
!define C_GREY4 D7DBDD
!define C_GREY5 CACFD2
!define C_GREY6 BDC3C7
!define C_LINK 3498DB
!define C_USE 27AE60
!define C_THROW 2C3E50

' -- Styles that don't work with new version of plantuml --
skinparam stereotypeABorderColor #A9DCDF
skinparam stereotypeIBorderColor #B4A7E5
skinparam stereotypeCBorderColor #ADD1B2
skinparam stereotypeEBorderColor #EB93DF
' -- END --

skinparam ClassBorderThickness 2
skinparam ArrowThickness 2

' Yellow
skinparam ClassBackgroundColor #FEFECE
skinparam ClassBorderColor #D4AC0D
' Red
skinparam ClassBackgroundColor<<red>> #FDEDEC
skinparam ClassBorderColor<<red>> #E74C3C
hide <<red>> stereotype
' Purple
skinparam ClassBackgroundColor<<purple>> #F4ECF7
skinparam ClassBorderColor<<purple>> #8E44AD
hide <<purple>> stereotype
' blue
skinparam ClassBackgroundColor<<blue>> #EBF5FB
skinparam ClassBorderColor<<blue>> #3498DB
hide <<blue>> stereotype
' Green
skinparam ClassBackgroundColor<<green>> #E9F7EF
skinparam ClassBorderColor<<green>> #27AE60
hide <<green>> stereotype
' Grey
skinparam ClassBackgroundColor<<grey>> #EAECEE
skinparam ClassBorderColor<<grey>> #2C3E50
hide <<grey>> stereotype

' == CONTENT ==

legend top
    __Colors legend__ :
    * __External API references__ :
    ** <back:pink>**Keypop Calypso Card API**</back>
    ** <back:yellow>java.security</back>
end legend

package "calypso.certificate" as api {
    +class "**final** CalypsoCertificateApiProperties" as ApiProperties <<green>> {
        +{static} **final** String VERSION
    }
    +interface CalypsoCertificateApiFactory <<blue>> {
        +CalypsoCertificateStore getCalypsoCertificateStore ()

        +CalypsoCaCertificateV1Builder createCalypsoCaCertificateV1Builder (byte[] issuerPublicKeyReference)
        +CalypsoCaCertificateV1Builder createCalypsoCaCertificateV1Builder (byte[] issuerPublicKeyReference, CalypsoCertificateSignerSpi caCertificateSigner)

        +CalypsoCardCertificateV1Builder  createCalypsoCardCertificateV1Builder (byte[] issuerPublicKeyReference)
        +CalypsoCardCertificateV1Builder  createCalypsoCardCertificateV1Builder (byte[] issuerPublicKeyReference, CalypsoCertificateSignerSpi cardCertificateSigner)
    }
    +interface CalypsoCertificateStore <<blue>> {
        +CalypsoCertificateStore addPcaPublicKey (byte[] publicKeyReference, <back:yellow>RSAPublicKey</back> publicKey)
        +CalypsoCertificateStore addPcaKeyPair (byte[] publicKeyReference, <back:yellow>RSAPublicKey</back> publicKey, <back:yellow>RSAPrivateKey</back> privateKey)

        +CalypsoCertificateStore addCalypsoCaCertificate (CalypsoCaCertificate caCertificate)
        +CalypsoCertificateStore addCalypsoCaCertificate (CalypsoCaCertificate caCertificate, <back:yellow>RSAPrivateKey</back> caPrivateKey)
    }
    package "spi" as spi {
        +interface CalypsoCertificateSignerSpi <<red>> {
            +byte[] generateSignedCertificate (byte[] data, byte[] recoverableData)
        }
    }
    package "ca" as ca {
        +interface CalypsoCaCertificateV1Builder <<blue>> {
            +CalypsoCaCertificateV1Builder withCaPublicKey (<back:yellow>RSAPublicKey</back> caPublicKey, byte[] caPublicKeyReference)
            +CalypsoCaCertificateV1Builder withStartDate (int year, int month, int day)
            +CalypsoCaCertificateV1Builder withEndDate (int year, int month, int day)
            +CalypsoCaCertificateV1Builder withTargetAid (byte[] aid, boolean isTruncated)
            +CalypsoCaCertificateV1Builder withCaRights (byte caRights)
            +CalypsoCaCertificateV1Builder withCaScope (byte caScope)

            +CalypsoCaCertificateV1 build ()
        }
        +interface "<<<back:pink>CaCertificate</back>>>\nCalypsoCaCertificate" as CalypsoCaCertificate {
            +byte[] getRawData ()
        }
        +interface "CalypsoCaCertificateV1" as CalypsoCaCertificateV1 extends CalypsoCaCertificate {
            +<color:grey>byte getType ()
            +<color:grey>byte getStructureVersion ()

            +<color:grey>byte[] getIssuerPublicKeyReference ()

            +<color:grey>byte[] getCaPublicKeyReference ()
            +<color:grey>byte[] getCaPublicKey ()

            +<color:grey>byte[] getStartDate ()
            +<color:grey>byte[] getEndDate ()

            +<color:grey>int getCaTargetAidSize ()
            +<color:grey>byte[] getCaTargetAidValue ()

            +<color:grey>byte getCaRights ()
            +<color:grey>byte getCaScope ()
            +<color:grey>byte getCaOperatingMode ()

            +<color:grey>byte[] getSignature ()
        }
    }
    package "card" as card {
        +interface CalypsoCardCertificateV1Builder <<blue>> {
            +CalypsoCardCertificateV1Builder withCardPublicKey (byte[] cardPublicKey)
            +CalypsoCardCertificateV1Builder withStartDate (int year, int month, int day)
            +CalypsoCardCertificateV1Builder withEndDate (int year, int month, int day)
            +CalypsoCardCertificateV1Builder withCardAid (byte[] aid)
            +CalypsoCardCertificateV1Builder withCardSerialNumber (byte[] serialNumber)
            +CalypsoCardCertificateV1Builder withCardStartupInfo (byte[] startupInfo)
            +CalypsoCardCertificateV1Builder withIndex (int index)

            +CalypsoCardCertificateV1 build ()
        }
        +interface "<<<back:pink>CardCertificate</back>>>\nCalypsoCardCertificate" as CalypsoCardCertificate {
            +byte[] getRawData ()
        }
        +interface "CalypsoCardCertificateV1" as CalypsoCardCertificateV1 extends CalypsoCardCertificate {
            +<color:grey>byte getType ()
            +<color:grey>byte getStructureVersion ()

            +<color:grey>byte[] getIssuerPublicKeyReference ()

            +<color:grey>byte[] getCardPublicKey ()

            +<color:grey>byte[] getStartDate ()
            +<color:grey>byte[] getEndDate ()

            +<color:grey>int getCardAidSize ()
            +<color:grey>byte[] getCardAidValue ()
            +<color:grey>byte[] getCardSerialNumber ()
            +<color:grey>byte[] getCardStartupInfo ()

            +<color:grey>int getIndex ()

            +<color:grey>byte[] getSignature ()
        }
    }
    +class "<<RuntimeException>>\n**final** CertificateSigningException" as CertificateSigningException <<green>> {
        +CertificateSigningException (String message)
        +CertificateSigningException (String message, Throwable cause)
    }
    +class "<<RuntimeException>>\n**final** CertificateConsistencyException" as CertificateConsistencyException <<green>> {
        +CertificateConsistencyException (String message)
        +CertificateConsistencyException (String message, Throwable cause)
    }
}

' Associations

CalypsoCertificateApiFactory ..> CalypsoCertificateStore #C_LINK : provide >
CalypsoCertificateApiFactory ...> CalypsoCaCertificateV1Builder #C_LINK : create >
CalypsoCertificateApiFactory ...> CalypsoCardCertificateV1Builder #C_LINK : create >
CalypsoCertificateApiFactory .right.> CalypsoCertificateSignerSpi #C_USE : use >

CalypsoCertificateStore ..> CalypsoCaCertificate #C_USE : use >

CalypsoCaCertificateV1Builder ..> CalypsoCaCertificateV1 #C_LINK : create >

CalypsoCardCertificateV1Builder ..> CalypsoCardCertificateV1 #C_LINK : create >


' == LAYOUT ==

CalypsoCaCertificateV1 -[hidden]- CertificateConsistencyException
CertificateConsistencyException -[hidden]right- CertificateSigningException
'CalypsoCertificateApiFactory -[hidden]- CalypsoCaCertificateV1Builder
'CalypsoCertificateApiFactory -[hidden]- CalypsoCardCertificateV1Builder

' == STYLE ==

package api #C_GREY1 {}
package api.spi #C_GREY2 {}
package api.ca #C_GREY2 {}
package api.card #C_GREY2 {}

@enduml